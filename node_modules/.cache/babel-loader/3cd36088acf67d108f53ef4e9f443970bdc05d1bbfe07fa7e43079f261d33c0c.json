{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      // 表单数据\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      // 验证规则\n      rules: {\n        username: [{\n          required: true,\n          message: 'Please enter username',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter password',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 处理登录按钮点击\n    handleLogin(username) {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          localStorage.setItem('user', username);\n          this.$axios.post('/User/login', {\n            role: \"ROLE_CUSTOMER\",\n            username: this.loginForm.username,\n            password: this.loginForm.password\n          }).then(response => {\n            console.log(response.data);\n            let res = response.data;\n            if (res['code'] == 200) {\n              localStorage.setItem('jwtToken', res['jwtToken']);\n              this.$message({\n                message: 'Login successful!',\n                type: 'success'\n              });\n              this.$router.push('/productList');\n            } else {\n              this.$message({\n                message: 'Login failed, please try again.',\n                type: 'error'\n              });\n            }\n          }).catch(error => {\n            console.error(error);\n            this.$message({\n              message: 'Login failed, please try again.',\n              type: 'error'\n            });\n          });\n          // 模拟登录逻辑\n        } else {\n          console.log('Error during login');\n          return false;\n        }\n      });\n    },\n    // go to register page\n    handleRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["data","loginForm","username","password","rules","required","message","trigger","methods","handleLogin","$refs","validate","valid","localStorage","setItem","$axios","post","role","then","response","console","log","res","$message","type","$router","push","catch","error","handleRegister"],"sources":["src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"login-container\">\n      <el-card class=\"login-card\" shadow=\"hover\">\n        <h2 class=\"login-title\">Welcome to Musical Instrument Online Website</h2>\n\n        <el-form :model=\"loginForm\" ref=\"loginForm\" :rules=\"rules\" label-width=\"80px\">\n          <!-- 用户名输入框 -->\n          <el-form-item label=\"Username\" prop=\"username\">\n            <el-input v-model=\"loginForm.username\" placeholder=\"Enter your username\"></el-input>\n          </el-form-item>\n\n          <!-- 密码输入框 -->\n          <el-form-item label=\"Password\" prop=\"password\">\n            <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"Enter your password\"></el-input>\n          </el-form-item>\n\n          <!-- 登录按钮 -->\n          <!-- <el-form-item>\n              \n            </el-form-item> -->\n        </el-form>\n        <el-button class=\"login-button\" type=\"primary\" @click=\"handleLogin(loginForm.username)\">Login</el-button>\n        <div>\n          <el-button type=\"text\" size=\"mini\" @click=\"handleRegister\">New user? Click here to register.</el-button>\n        </div>\n\n      </el-card>\n\n    </div>\n    <div class=\"power\">Powered by Xiao Su 2097658, Angran Li 2097002, Dongye Liu 2075960</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 表单数据\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      // 验证规则\n      rules: {\n        username: [\n          { required: true, message: 'Please enter username', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: 'Please enter password', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 处理登录按钮点击\n    handleLogin(username) {\n      this.$refs.loginForm.validate((valid) => {\n        if (valid) {\n          localStorage.setItem('user', username);\n          this.$axios.post('/User/login', {\n            role: \"ROLE_CUSTOMER\",\n            username: this.loginForm.username,\n            password: this.loginForm.password,\n          })\n            .then(response => {\n              console.log(response.data);\n              let res = response.data;\n              if (res['code'] == 200) {\n                localStorage.setItem('jwtToken', res['jwtToken']);\n                this.$message({\n                  message: 'Login successful!',\n                  type: 'success'\n                });\n                this.$router.push('/productList');\n              }\n              else {\n                this.$message({\n                  message: 'Login failed, please try again.',\n                  type: 'error'\n                });\n              }\n\n            })\n            .catch(error => {\n              console.error(error);\n              this.$message({\n                message: 'Login failed, please try again.',\n                type: 'error'\n              });\n            });\n          // 模拟登录逻辑\n        } else {\n          console.log('Error during login');\n          return false;\n        }\n      });\n    },\n    // go to register page\n    handleRegister() {\n      this.$router.push('/register');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 500px;\n  background-color: #f2f2f2;\n}\n\n.login-card {\n  width: 700px;\n  padding: 20px;\n}\n\n.login-title {\n  text-align: center;\n  margin-bottom: 60px;\n  font-size: 24px;\n  color: #409EFF;\n}\n\n.login-button {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.power {\n  text-align: center;\n  font-size: 12px;\n  color: #888888;\n  padding: 10px 0;\n  margin-top: 20px;\n}\n</style>"],"mappings":";AAmCA;EACAA,KAAA;IACA;MACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACA;IACAC,YAAAP,QAAA;MACA,KAAAQ,KAAA,CAAAT,SAAA,CAAAU,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,YAAA,CAAAC,OAAA,SAAAZ,QAAA;UACA,KAAAa,MAAA,CAAAC,IAAA;YACAC,IAAA;YACAf,QAAA,OAAAD,SAAA,CAAAC,QAAA;YACAC,QAAA,OAAAF,SAAA,CAAAE;UACA,GACAe,IAAA,CAAAC,QAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAnB,IAAA;YACA,IAAAsB,GAAA,GAAAH,QAAA,CAAAnB,IAAA;YACA,IAAAsB,GAAA;cACAT,YAAA,CAAAC,OAAA,aAAAQ,GAAA;cACA,KAAAC,QAAA;gBACAjB,OAAA;gBACAkB,IAAA;cACA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA,OACA;cACA,KAAAH,QAAA;gBACAjB,OAAA;gBACAkB,IAAA;cACA;YACA;UAEA,GACAG,KAAA,CAAAC,KAAA;YACAR,OAAA,CAAAQ,KAAA,CAAAA,KAAA;YACA,KAAAL,QAAA;cACAjB,OAAA;cACAkB,IAAA;YACA;UACA;UACA;QACA;UACAJ,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACA;IACAQ,eAAA;MACA,KAAAJ,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}