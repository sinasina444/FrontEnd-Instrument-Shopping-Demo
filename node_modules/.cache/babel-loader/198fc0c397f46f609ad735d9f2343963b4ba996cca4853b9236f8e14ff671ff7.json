{"ast":null,"code":"export default {\n  data() {\n    return {\n      info: {\n        username: \"\",\n        role: \"\",\n        email: \"\",\n        address: \"\",\n        phoneNumber: \"\"\n      },\n      tempInfo: {},\n      // Temporary object to hold editable fields\n      loading: true,\n      editMode: false // Tracks whether we are in edit mode\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await this.$axios.post('/UserProfile/getUserInfoByUsername', {\n          username: localStorage.getItem('user')\n        });\n        const res = response.data;\n        if (res.code === 200) {\n          this.info = {\n            ...res\n          };\n        } else {\n          this.$message.error('Failed to fetch user information');\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('An error occurred while fetching user information');\n      } finally {\n        this.loading = false;\n      }\n    },\n    editModeToggle() {\n      this.tempInfo = {\n        ...this.info\n      }; // Copy current info to tempInfo for editing\n      this.editMode = true;\n    },\n    async saveChanges() {\n      try {\n        const response = await this.$axios.post('/UserProfile/updateUserInfo', {\n          username: this.info.username,\n          // Ensure username is included in the payload\n          email: this.tempInfo.email,\n          phoneNumber: this.tempInfo.phoneNumber,\n          address: this.tempInfo.address\n        });\n        if (response.data.code === 200) {\n          this.info = {\n            ...this.info,\n            email: this.tempInfo.email,\n            phoneNumber: this.tempInfo.phoneNumber,\n            address: this.tempInfo.address\n          };\n          this.editMode = false;\n          this.$message.success('Profile updated successfully');\n        } else {\n          this.$message.error('Failed to save changes');\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('An error occurred while saving changes');\n      }\n    },\n    cancelChanges() {\n      this.tempInfo = {}; // Clear tempInfo\n      this.editMode = false; // Exit edit mode without saving\n    },\n    handleClick() {\n      this.$router.back();\n    }\n  }\n};","map":{"version":3,"names":["data","info","username","role","email","address","phoneNumber","tempInfo","loading","editMode","created","fetchUserInfo","methods","response","$axios","post","localStorage","getItem","res","code","$message","error","console","editModeToggle","saveChanges","success","cancelChanges","handleClick","$router","back"],"sources":["src/views/UserProfile.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"card\" shadow=\"hover\">\n      <h2 class=\"title\">User Profile</h2>\n      <div v-if=\"loading\" class=\"loading\">Loading...</div>\n      <div v-else class=\"content\">\n        <div>\n          <span>Username: </span>\n          <span>{{ info.username }}</span>\n        </div>\n        <div>\n          <span>Type: </span>\n          <span>{{ info.role }}</span>\n        </div>\n        <div>\n          <span>Email: </span>\n          <span v-if=\"!editMode\">{{ info.email }}</span>\n          <el-input v-else v-model=\"tempInfo.email\" size=\"small\"></el-input>\n        </div>\n        <div>\n          <span>Phone: </span>\n          <span v-if=\"!editMode\">{{ info.phoneNumber }}</span>\n          <el-input v-else v-model=\"tempInfo.phoneNumber\" size=\"small\"></el-input>\n        </div>\n        <div>\n          <span>Address: </span>\n          <span v-if=\"!editMode\">{{ info.address }}</span>\n          <el-input v-else v-model=\"tempInfo.address\" size=\"small\"></el-input>\n        </div>\n      </div>\n      <div class=\"actions\">\n        <div class=\"left-buttons\">\n          <el-button v-if=\"!editMode\" type=\"primary\" @click=\"editMode = true\">Edit</el-button>\n          <el-button v-if=\"editMode\" type=\"success\" @click=\"saveChanges\">Save</el-button>\n          <el-button v-if=\"editMode\" type=\"danger\" @click=\"cancelChanges\">Cancel</el-button>\n        </div>\n        <div class=\"right-buttons\">\n          <el-button class=\"button\" type=\"primary\" @click=\"handleClick\">Go back</el-button>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      info: {\n        username: \"\",\n        role: \"\",\n        email: \"\",\n        address: \"\",\n        phoneNumber: \"\"\n      },\n      tempInfo: {}, // Temporary object to hold editable fields\n      loading: true,\n      editMode: false, // Tracks whether we are in edit mode\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await this.$axios.post('/UserProfile/getUserInfoByUsername', {\n          username: localStorage.getItem('user')\n        });\n        const res = response.data;\n        if (res.code === 200) {\n          this.info = { ...res };\n        } else {\n          this.$message.error('Failed to fetch user information');\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('An error occurred while fetching user information');\n      } finally {\n        this.loading = false;\n      }\n    },\n    editModeToggle() {\n      this.tempInfo = { ...this.info }; // Copy current info to tempInfo for editing\n      this.editMode = true;\n    },\n    async saveChanges() {\n      try {\n        const response = await this.$axios.post('/UserProfile/updateUserInfo', {\n            username: this.info.username, // Ensure username is included in the payload\n            email: this.tempInfo.email,\n            phoneNumber: this.tempInfo.phoneNumber,\n            address: this.tempInfo.address,\n        });\n        if (response.data.code === 200) {\n          this.info = { \n                ...this.info, \n                email: this.tempInfo.email,\n                phoneNumber: this.tempInfo.phoneNumber,\n                address: this.tempInfo.address \n            };\n          this.editMode = false;\n          this.$message.success('Profile updated successfully');\n        } else {\n          this.$message.error('Failed to save changes');\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('An error occurred while saving changes');\n      }\n    },\n    cancelChanges() {\n      this.tempInfo = {}; // Clear tempInfo\n      this.editMode = false; // Exit edit mode without saving\n    },\n    handleClick() {\n      this.$router.back();\n    }\n  }\n};\n</script>\n\n\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f2f2f2;\n  padding: auto;\n  box-sizing:border-box;\n}\n\n.card {\n  width: 100%;\n  max-width:700px;\n  padding: 30px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  text-align: center;\n  margin-bottom: 40px;\n  font-size: 28px;\n  color: #409EFF;\n}\n\n.button {\n  display: block;\n  margin: 0 auto;\n  padding: 10px 20px;\n}\n\n.left-buttons,\n.right-buttons {\n  display: flex;\n  gap: 10px; /* Adds space between buttons in each group */\n}\n\n.content>div {\n  margin-top: 20px;\n  margin-bottom: 50px;\n  font-weight: bold;\n}\n\n.actions {\n  display: flex;\n  justify-content: space-between; /* Ensures space between groups */\n  align-items: center;\n  margin-top: 20px;\n}\n</style>"],"mappings":"AA6CA;EACAA,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAA;QACAC,WAAA;MACA;MACAC,QAAA;MAAA;MACAC,OAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA,MAAAD,cAAA;MACA;QACA,MAAAE,QAAA,cAAAC,MAAA,CAAAC,IAAA;UACAb,QAAA,EAAAc,YAAA,CAAAC,OAAA;QACA;QACA,MAAAC,GAAA,GAAAL,QAAA,CAAAb,IAAA;QACA,IAAAkB,GAAA,CAAAC,IAAA;UACA,KAAAlB,IAAA;YAAA,GAAAiB;UAAA;QACA;UACA,KAAAE,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;QACA,KAAAb,OAAA;MACA;IACA;IACAe,eAAA;MACA,KAAAhB,QAAA;QAAA,QAAAN;MAAA;MACA,KAAAQ,QAAA;IACA;IACA,MAAAe,YAAA;MACA;QACA,MAAAX,QAAA,cAAAC,MAAA,CAAAC,IAAA;UACAb,QAAA,OAAAD,IAAA,CAAAC,QAAA;UAAA;UACAE,KAAA,OAAAG,QAAA,CAAAH,KAAA;UACAE,WAAA,OAAAC,QAAA,CAAAD,WAAA;UACAD,OAAA,OAAAE,QAAA,CAAAF;QACA;QACA,IAAAQ,QAAA,CAAAb,IAAA,CAAAmB,IAAA;UACA,KAAAlB,IAAA;YACA,QAAAA,IAAA;YACAG,KAAA,OAAAG,QAAA,CAAAH,KAAA;YACAE,WAAA,OAAAC,QAAA,CAAAD,WAAA;YACAD,OAAA,OAAAE,QAAA,CAAAF;UACA;UACA,KAAAI,QAAA;UACA,KAAAW,QAAA,CAAAK,OAAA;QACA;UACA,KAAAL,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAK,cAAA;MACA,KAAAnB,QAAA;MACA,KAAAE,QAAA;IACA;IACAkB,YAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}