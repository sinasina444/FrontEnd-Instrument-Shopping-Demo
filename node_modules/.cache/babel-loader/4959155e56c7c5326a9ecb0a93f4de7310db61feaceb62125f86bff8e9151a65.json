{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      // 表单数据\n      loginForm: {\n        role: 'customer',\n        username: '',\n        password: '',\n        passwordAgain: '',\n        email: '',\n        phoneNumber: '',\n        address: ''\n      },\n      // 验证规则\n      rules: {\n        username: [{\n          required: true,\n          message: 'Please enter username',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'Please enter password',\n          trigger: 'blur'\n        }],\n        passwordAgain: [{\n          required: true,\n          message: 'Please enter password again',\n          trigger: 'blur'\n        }, {\n          validator: this.validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleRegister() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$axios.post('/User/register', {\n            role: this.loginForm.role == \"customer\" ? \"ROLE_CUSTOMER\" : \"ROLE_SELLER\",\n            username: this.loginForm.username,\n            password: this.loginForm.password,\n            email: this.loginForm.email,\n            phoneNumber: this.loginForm.phoneNumber,\n            address: this.loginForm.address\n          }).then(response => {\n            console.log(response.data);\n            let res = response.data;\n            if (res['code'] == 200) {\n              this.$message({\n                message: 'Registration successful, please login.',\n                type: 'success'\n              });\n              this.$router.push('/');\n            } else {\n              this.$message({\n                message: 'Registration failed, please try again.',\n                type: 'error'\n              });\n            }\n          }).catch(error => {\n            console.log(error);\n            this.$message({\n              message: 'Registration failed, please try again.',\n              type: 'error'\n            });\n          });\n        } else {\n          console.log('Error during register');\n          return false;\n        }\n      });\n    },\n    validateConfirmPassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('Please enter password again'));\n      } else if (value !== this.loginForm.password) {\n        callback(new Error('It is different from password above!'));\n      } else {\n        callback();\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","loginForm","role","username","password","passwordAgain","email","phoneNumber","address","rules","required","message","trigger","validator","validateConfirmPassword","methods","handleRegister","$refs","validate","valid","$axios","post","then","response","console","log","res","$message","type","$router","push","catch","error","rule","value","callback","Error"],"sources":["src/views/RegisterPage.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"login-container\">\n            <el-card class=\"login-card\" shadow=\"hover\">\n                <h2 class=\"login-title\">Welcome to be a new user!</h2>\n\n                <el-form :model=\"loginForm\" ref=\"loginForm\" :rules=\"rules\" label-width=\"150px\">\n                    <el-form-item label=\"User type\">\n                        <el-radio-group v-model=\"loginForm.role\">\n                            <el-radio label=\"customer\"></el-radio>\n                            <el-radio label=\"seller\"></el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <!-- 用户名输入框 -->\n                    <el-form-item label=\"Username\" prop=\"username\">\n                        <el-input v-model=\"loginForm.username\" placeholder=\"Enter your username\"></el-input>\n                    </el-form-item>\n\n                    <!-- 密码输入框 -->\n                    <el-form-item label=\"Password\" prop=\"password\">\n                        <el-input v-model=\"loginForm.password\" type=\"password\"\n                            placeholder=\"Enter your password\"></el-input>\n                    </el-form-item>\n\n                    <!-- 密码输入框 -->\n                    <el-form-item label=\"Password again\" prop=\"passwordAgain\">\n                        <el-input v-model=\"loginForm.passwordAgain\" type=\"password\"\n                            placeholder=\"Enter your password again\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"Email\" prop=\"email\">\n                        <el-input v-model=\"loginForm.email\" placeholder=\"Enter your email\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"Phone number\" prop=\"phoneNumber\">\n                        <el-input v-model=\"loginForm.phoneNumber\" placeholder=\"Enter your phone number\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"Address\" prop=\"address\">\n                        <el-input v-model=\"loginForm.address\" placeholder=\"Enter your address\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <el-button class=\"login-button\" type=\"primary\" @click=\"handleRegister\">Register</el-button>\n\n            </el-card>\n\n        </div>\n        <div class=\"power\">Powered by Xiao Su 2097658, Angran Li 2097002, Dongye Liu 2075960</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            // 表单数据\n            loginForm: {\n                role: 'customer',\n                username: '',\n                password: '',\n                passwordAgain: '',\n                email: '',\n                phoneNumber: '',\n                address: ''\n            },\n            // 验证规则\n            rules: {\n                username: [\n                    { required: true, message: 'Please enter username', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: 'Please enter password', trigger: 'blur' }\n                ],\n                passwordAgain: [\n                    { required: true, message: 'Please enter password again', trigger: 'blur' },\n                    { validator: this.validateConfirmPassword, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    methods: {\n        handleRegister() {\n            this.$refs.loginForm.validate((valid) => {\n                if (valid) {\n                    this.$axios.post('/User/register', {\n                        role: this.loginForm.role == \"customer\" ? \"ROLE_CUSTOMER\" : \"ROLE_SELLER\",\n                        username: this.loginForm.username,\n                        password: this.loginForm.password,\n                        email: this.loginForm.email,\n                        phoneNumber: this.loginForm.phoneNumber,\n                        address: this.loginForm.address,\n                    })\n                        .then(response => {\n                            console.log(response.data);\n                            let res = response.data;\n                            if (res['code'] == 200) {\n                                this.$message({\n                                    message: 'Registration successful, please login.',\n                                    type: 'success'\n                                });\n                                this.$router.push('/');\n                            }\n                            else {\n                                this.$message({\n                                    message: 'Registration failed, please try again.',\n                                    type: 'error'\n                                });\n                            }\n\n                        })\n                        .catch(error => {\n                            console.log(error);\n                            this.$message({\n                                message: 'Registration failed, please try again.',\n                                type: 'error'\n                            });\n                        });\n\n                } else {\n                    console.log('Error during register');\n                    return false;\n                }\n            });\n        },\n        validateConfirmPassword(rule, value, callback) {\n            if (value === '') {\n                callback(new Error('Please enter password again'));\n            } else if (value !== this.loginForm.password) {\n                callback(new Error('It is different from password above!'));\n            } else {\n                callback();\n            }\n        },\n\n    }\n};\n</script>\n\n<style scoped>\n.login-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 700px;\n    background-color: #f2f2f2;\n}\n\n.login-card {\n    width: 700px;\n    padding: 20px;\n}\n\n.login-title {\n    text-align: center;\n    margin-bottom: 60px;\n    font-size: 24px;\n    color: #409EFF;\n}\n\n.login-button {\n    text-align: center;\n    margin-bottom: 10px;\n}\n\n.power {\n    text-align: center;\n    font-size: 12px;\n    color: #888888;\n    padding: 10px 0;\n    margin-top: 20px;\n}\n\n.el-radio-group {\n    width: 80%;\n}\n\n.el-radio {\n    margin-right: 100px;\n}\n</style>"],"mappings":";AAiDA;EACAA,KAAA;IACA;MACA;MACAC,SAAA;QACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,aAAA;QACAC,KAAA;QACAC,WAAA;QACAC,OAAA;MACA;MACA;MACAC,KAAA;QACAN,QAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,aAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,SAAA,OAAAC,uBAAA;UAAAF,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,eAAA;MACA,KAAAC,KAAA,CAAAhB,SAAA,CAAAiB,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA;YACAnB,IAAA,OAAAD,SAAA,CAAAC,IAAA;YACAC,QAAA,OAAAF,SAAA,CAAAE,QAAA;YACAC,QAAA,OAAAH,SAAA,CAAAG,QAAA;YACAE,KAAA,OAAAL,SAAA,CAAAK,KAAA;YACAC,WAAA,OAAAN,SAAA,CAAAM,WAAA;YACAC,OAAA,OAAAP,SAAA,CAAAO;UACA,GACAc,IAAA,CAAAC,QAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAvB,IAAA;YACA,IAAA0B,GAAA,GAAAH,QAAA,CAAAvB,IAAA;YACA,IAAA0B,GAAA;cACA,KAAAC,QAAA;gBACAhB,OAAA;gBACAiB,IAAA;cACA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA,OACA;cACA,KAAAH,QAAA;gBACAhB,OAAA;gBACAiB,IAAA;cACA;YACA;UAEA,GACAG,KAAA,CAAAC,KAAA;YACAR,OAAA,CAAAC,GAAA,CAAAO,KAAA;YACA,KAAAL,QAAA;cACAhB,OAAA;cACAiB,IAAA;YACA;UACA;QAEA;UACAJ,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAX,wBAAAmB,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAjC,SAAA,CAAAG,QAAA;QACA+B,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}